group 'lib-learn'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.5.4"
    }
}

apply plugin: 'docker-compose'

dockerCompose.isRequiredBy(test) // hooks 'dependsOn composeUp' and 'finalizedBy composeDown'
dockerCompose.isRequiredBy(build) // hooks 'dependsOn composeUp' and 'finalizedBy composeDown'

dockerCompose {
     useComposeFiles = ['/Users/yuriy/IdeaProjects/lib-learn/src/main/resources/docker-compose.yaml']
    // startedServices = ['web'] // list of services to execute when calling 'docker-compose up' (when not specified, all services are executed)
    // captureContainersOutput = true // prints output of all containers to Gradle output - very useful for debugging
    // captureContainersOutputToFile = '/path/to/logFile' // sends output of all containers to a log file
    stopContainers = false // doesn't call `docker-compose down` - useful for debugging
    // removeContainers = false
    // removeImages = "None" // Other accepted values are: "All" and "Local"
    // removeOrphans = false // Removes containers for services not defined in the Compose file
    // forceRecreate = true // pass '--force-recreate' when calling 'docker-compose up'
    // removeVolumes = false
    // waitForTcpPorts = false // turns off the waiting for exposed TCP ports opening
    // projectName = 'my-project' // allow to set custom docker-compose project name (defaults to directory name)
    // executable = '/path/to/docker-compose' // allow to set the path of the docker-compose executable (usefull if not present in PATH)
    // dockerExecutable = '/path/to/docker' // allow to set the path of the docker executable (usefull if not present in PATH)
    // dockerComposeWorkingDirectory = '/path/where/docker-compose/is/invoked/from'
    // dockerComposeStopTimeout = java.time.Duration.ofSeconds(20) // time before docker-compose sends SIGTERM to the running containers after the composeDown task has been started
    // environment.put 'BACKEND_ADDRESS', '192.168.1.100' // Pass environment variable to 'docker-compose' for substitution in compose file
    // scale = [${serviceName1}: 5, ${serviceName2}: 2] // Pass docker compose --scale option like 'docker-compose up --scale serviceName1=5 --scale serviceName2=2'
}